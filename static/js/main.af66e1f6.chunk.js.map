{"version":3,"sources":["image/panda.jpg","image/zloy.mp3","Dog.js","Counter.js","reducer.js","App.js","serviceWorker.js","store.js","index.js"],"names":["module","exports","Dog","classForImage","this","props","isHidden","className","src","image","onClick","onImageHandleClick","React","Component","Counter","count","initialState","dogs","id","App","setNewPositionOfImage","setPosition","dogAudioRef","current","currentTime","play","incrementCount","createRef","setInterval","dogsElement","map","d","dogAudio","ref","ConnectedApp","connect","state","type","Boolean","window","location","hostname","match","store","createStore","action","randomImageId","Math","floor","random","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mHAAAA,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,wMCgB5BC,E,iLARP,IAAIC,EAAgBC,KAAKC,MAAMC,SAAW,aAAe,QACzD,OACQ,yBAAKC,UAAU,QACX,yBAAKC,IAAKC,IAAOF,UAAWJ,EAAeO,QAASN,KAAKC,MAAMM,0B,GALjEC,IAAMC,WCOTC,E,iLARP,OACI,yBAAKP,UAAU,WACVH,KAAKC,MAAMU,W,GAJNH,IAAMC,W,0lBCH5B,IAGMG,EAAe,CACjBC,KAAM,CACF,CAACC,GAAI,EAAGZ,UAAU,GAClB,CAACY,GAAI,EAAGZ,UAAU,GAClB,CAACY,GAAI,EAAGZ,UAAU,GAClB,CAACY,GAAI,EAAGZ,UAAU,GAClB,CAACY,GAAI,EAAGZ,UAAU,GAClB,CAACY,GAAI,EAAGZ,UAAU,GAClB,CAACY,GAAI,EAAGZ,UAAU,GAClB,CAACY,GAAI,EAAGZ,UAAU,GAClB,CAACY,GAAI,EAAGZ,UAAU,GAClB,CAACY,GAAI,EAAGZ,UAAU,GAClB,CAACY,GAAI,GAAIZ,UAAU,GACnB,CAACY,GAAI,GAAIZ,UAAU,GACnB,CAACY,GAAI,GAAIZ,UAAU,GACnB,CAACY,GAAI,GAAIZ,UAAU,GACnB,CAACY,GAAI,GAAIZ,UAAU,GACnB,CAACY,GAAI,GAAIZ,UAAU,GACnB,CAACY,GAAI,GAAIZ,UAAU,GACnB,CAACY,GAAI,GAAIZ,UAAU,GACnB,CAACY,GAAI,GAAIZ,UAAU,GACnB,CAACY,GAAI,GAAIZ,UAAU,GACnB,CAACY,GAAI,GAAIZ,UAAU,GACnB,CAACY,GAAI,GAAIZ,UAAU,GACnB,CAACY,GAAI,GAAIZ,UAAU,GACnB,CAACY,GAAI,GAAIZ,UAAU,GACnB,CAACY,GAAI,GAAIZ,UAAU,GACnB,CAACY,GAAI,GAAIZ,UAAU,GACnB,CAACY,GAAI,GAAIZ,UAAU,GACnB,CAACY,GAAI,GAAIZ,UAAU,GACnB,CAACY,GAAI,GAAIZ,UAAU,GACnB,CAACY,GAAI,GAAIZ,UAAU,IAEvBS,MAAO,GC5BLI,E,YACF,aAAe,IAAD,8BACV,+CAQJC,sBAAwB,WACpB,EAAKf,MAAMgB,eAVD,EAadV,mBAAqB,WACjB,EAAKW,YAAYC,QAAQC,YAAc,EACvC,EAAKF,YAAYC,QAAQE,OACzB,EAAKpB,MAAMqB,kBAdX,EAAKJ,YAAcV,IAAMe,YAFf,E,iFAMVC,YAAYxB,KAAKgB,sBAAuB,O,+BAalC,IAAD,OACDS,EAAczB,KAAKC,MAAMY,KAAKa,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAKb,GAAIa,EAAEb,GAAIZ,SAAUyB,EAAEzB,SACtBK,mBAAoB,EAAKA,wBACzE,OACI,yBAAKJ,UAAU,aACX,2BAAOC,IAAKwB,IAAUC,IAAK7B,KAAKkB,cAChC,yBAAKf,UAAU,WACVsB,EACD,kBAAC,EAAD,CAASd,MAAOX,KAAKC,MAAMU,c,GA5B7BH,IAAMC,WA6CTqB,EAFMC,aARG,SAACC,GACrB,MAAO,CACHnB,KAAMmB,EAAMnB,KACZF,MAAOqB,EAAMrB,SAKyB,CAACW,eDajB,iBAAO,CACjCW,KAAM,oBCdoDhB,YDgBnC,iBAAO,CAC9BgB,KAAM,kBCjBWF,CAAuDhB,GCvCxDmB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,WCZSC,EAFDC,aHmCS,WAAmC,IAAlCR,EAAiC,uDAAzBpB,EAAc6B,EAAW,uCACrD,OAAQA,EAAOR,MACX,IAzCgB,kBA0CZ,OAAO,EAAP,GACOD,EADP,CAEIrB,MAAOqB,EAAMrB,MAAQ,IAE7B,IA7Ca,eA8CT,IAAI+B,EAAgBC,KAAKC,MAAoB,GAAdD,KAAKE,UACpC,OAAO,EAAP,GACOb,EADP,CAEInB,KAAMmB,EAAMnB,KAAKa,KAAI,SAAAC,GACjB,OAAGA,EAAEb,KAAO4B,EACD,EAAP,GAAWf,EAAX,CAAczB,UAAU,IAEjB,EAAP,GAAWyB,EAAX,CAAczB,UAAU,SAKxC,QACI,OAAO8B,MIpDnBc,IAASC,OACL,kBAAC,IAAD,CAAUR,MAAOA,GACb,kBAAC,EAAD,OAGFS,SAASC,eAAe,SFoHxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.af66e1f6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/panda.69c585c3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/zloy.c5f38d33.mp3\";","import React from 'react';\r\nimport image from './image/panda.jpg';\r\n\r\nimport './App.css';\r\n\r\n\r\nclass Dog extends React.Component {\r\n    render() {\r\n        let classForImage = this.props.isHidden ? 'photo show' : 'photo';\r\n        return (\r\n                <div className=\"item\">\r\n                    <img src={image} className={classForImage} onClick={this.props.onImageHandleClick}/>\r\n                </div>\r\n        );\r\n    }\r\n}\r\nexport default Dog;\r\n","import React from 'react';\nimport './App.css';\n\nclass Counter extends React.Component {\n    render() {\n        return (\n            <div className='counter'>\n                {this.props.count}\n            </div>\n        );\n    }\n}\n\nexport default Counter;\n","const INCREMENT_COUNT = 'INCREMENT_COUNT';\r\nconst SET_POSITION = 'SET_POSITION';\r\n\r\nconst initialState = {\r\n    dogs: [\r\n        {id: 0, isHidden: false},\r\n        {id: 1, isHidden: false},\r\n        {id: 2, isHidden: false},\r\n        {id: 3, isHidden: false},\r\n        {id: 4, isHidden: false},\r\n        {id: 5, isHidden: false},\r\n        {id: 6, isHidden: false},\r\n        {id: 7, isHidden: false},\r\n        {id: 8, isHidden: false},\r\n        {id: 9, isHidden: false},\r\n        {id: 10, isHidden: false},\r\n        {id: 11, isHidden: false},\r\n        {id: 12, isHidden: false},\r\n        {id: 13, isHidden: false},\r\n        {id: 14, isHidden: false},\r\n        {id: 15, isHidden: false},\r\n        {id: 16, isHidden: false},\r\n        {id: 17, isHidden: false},\r\n        {id: 18, isHidden: false},\r\n        {id: 19, isHidden: false},\r\n        {id: 20, isHidden: false},\r\n        {id: 21, isHidden: false},\r\n        {id: 22, isHidden: false},\r\n        {id: 23, isHidden: false},\r\n        {id: 24, isHidden: false},\r\n        {id: 25, isHidden: false},\r\n        {id: 26, isHidden: false},\r\n        {id: 27, isHidden: false},\r\n        {id: 28, isHidden: false},\r\n        {id: 29, isHidden: false}\r\n    ],\r\n    count: 0\r\n};\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INCREMENT_COUNT:\r\n            return {\r\n                ...state,\r\n                count: state.count + 1\r\n            };\r\n        case SET_POSITION:\r\n            let randomImageId = Math.floor(Math.random()*30);\r\n            return {\r\n                ...state,\r\n                dogs: state.dogs.map(d => {\r\n                    if(d.id === randomImageId){\r\n                        return {...d, isHidden: true}\r\n                    }else {\r\n                        return {...d, isHidden: false}\r\n                    }\r\n                })\r\n            };\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const incrementCount = () => ({\r\n    type: 'INCREMENT_COUNT'\r\n});\r\nexport const setPosition = () => ({\r\n    type: 'SET_POSITION'\r\n});\r\n\r\n","import React from 'react';\nimport './App.css';\nimport Dog from \"./Dog\";\nimport Counter from \"./Counter\";\nimport dogAudio from './image/zloy.mp3';\nimport {connect} from \"react-redux\";\nimport {incrementCount, setPosition} from \"./reducer\";\n\nclass App extends React.Component {\n    constructor() {\n        super();\n        this.dogAudioRef = React.createRef();\n    }\n\n    componentDidMount() {\n        setInterval(this.setNewPositionOfImage, 600);\n    }\n\n    setNewPositionOfImage = () => {\n        this.props.setPosition();\n    };\n\n    onImageHandleClick = () => {\n        this.dogAudioRef.current.currentTime = 0;\n        this.dogAudioRef.current.play();\n        this.props.incrementCount();\n    };\n\n    render() {\n        let dogsElement = this.props.dogs.map(d => <Dog id={d.id} isHidden={d.isHidden}\n                                                        onImageHandleClick={this.onImageHandleClick}/>);\n        return (\n            <div className=\"container\">\n                <audio src={dogAudio} ref={this.dogAudioRef}></audio>\n                <div className=\"wrapper\">\n                    {dogsElement}\n                    <Counter count={this.props.count}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        dogs: state.dogs,\n        count: state.count\n    };\n};\n\n\nconst ConnectedApp = connect(mapStateToProps, {incrementCount,setPosition})(App);\n\nexport default ConnectedApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {reducer} from \"./reducer\";\r\nimport {createStore} from \"redux\";\r\n\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ConnectedApp from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n    <Provider store={store} >\n        <ConnectedApp/>\n    </Provider>\n\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}